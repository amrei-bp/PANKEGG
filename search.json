[
  {
    "objectID": "quickstart.html",
    "href": "quickstart.html",
    "title": "Quickstart",
    "section": "",
    "text": "This quickstart guide will walk you through setting up Pankegg, running the pipeline on test data, and launching the web application to explore your results.",
    "crumbs": [
      "Getting started",
      "Quickstart"
    ]
  },
  {
    "objectID": "quickstart.html#install-pankegg-and-dependencies",
    "href": "quickstart.html#install-pankegg-and-dependencies",
    "title": "Quickstart",
    "section": "Install Pankegg and Dependencies",
    "text": "Install Pankegg and Dependencies\nInstall Pankegg via pip, conda, or pixi.\nSee the Installation section for detailed options.\nwget https://github.com/RVanDamme/PANKEGG/archive/refs/heads/master.zip\nunzip master.zip\ncd PANKEGG-master\npip install .",
    "crumbs": [
      "Getting started",
      "Quickstart"
    ]
  },
  {
    "objectID": "quickstart.html#download-example-test-data-optional",
    "href": "quickstart.html#download-example-test-data-optional",
    "title": "Quickstart",
    "section": "Download Example Test Data (optional)",
    "text": "Download Example Test Data (optional)\nDownload and extract the example dataset:\nwget https://osf.io/5v3zc/download -O pankegg_test_data.zip\nunzip pankegg_test_data.zip",
    "crumbs": [
      "Getting started",
      "Quickstart"
    ]
  },
  {
    "objectID": "quickstart.html#build-the-sql-database-optional",
    "href": "quickstart.html#build-the-sql-database-optional",
    "title": "Quickstart",
    "section": "Build the SQL Database (optional)",
    "text": "Build the SQL Database (optional)\nGenerate a Pankegg database from the provided CSV using the included test data (for both Sourmash and GTDB-TK classification):\npython pankegg_make_db.py -i pankegg_test_data/sourmash_example.csv -o test_sourmash --output_dir pankegg_test_data",
    "crumbs": [
      "Getting started",
      "Quickstart"
    ]
  },
  {
    "objectID": "quickstart.html#launch-the-web-application",
    "href": "quickstart.html#launch-the-web-application",
    "title": "Quickstart",
    "section": "Launch the Web Application",
    "text": "Launch the Web Application\nStart the web server using the database present in the repository:\npython pankegg_app.py --d data/pankegg.db\nor use the the database you generated in point 3:\npython pankegg_app.py --d pankegg_test_data/test_sourmash",
    "crumbs": [
      "Getting started",
      "Quickstart"
    ]
  },
  {
    "objectID": "quickstart.html#open-web-browser",
    "href": "quickstart.html#open-web-browser",
    "title": "Quickstart",
    "section": "Open web browser",
    "text": "Open web browser\nNow, open your web browser and go to the IP address written in your terminal ( http://0.0.0.0:5000) to interactively explore your metagenomic data!",
    "crumbs": [
      "Getting started",
      "Quickstart"
    ]
  },
  {
    "objectID": "input_files.html",
    "href": "input_files.html",
    "title": "Supported input",
    "section": "",
    "text": "Pankegg was developed to integrate output files from a variety of metagenomics tools, such as CheckM2, Sourmash, GTDB-TK and EggNOG. You can combine them all, or only add the ones that are interesting for you.\n\n\nInput files\n\nSupported input files\n\n\n\n\n\n\n\nTool\nInput File\nData Extracted\n\n\n\n\ncheckm2\nquality_report.tsv\nbin completeness and contamination\n\n\nSourmash\n*.txt\nID, Status and Taxonomic classification\n\n\nGTDB-TK\n*.summary.tsv\nUser genome and Taxonomic classification\n\n\nEggNOG\n*.annotations.tsv\nKEGG Orthologs, KEGG Pathways, GO terms, Description\n\n\n\n\n\n\nAdditional Input Files Provided by Pankegg\nPANKEGG requires more input files. However, these are already provided and you donâ€™t need to worry about them. They are located in the data directory.\n\nAdditional input, built into PANKEGG\n\n\n\n\n\n\n\nFile Name\nDescription\nData Origin\n\n\n\n\nkegg_map_info.tsv\nContains mapID, pathway name, and total number of orthologs per pathway (map)\nExtracted from KEGG pathway database\n\n\nkegg_map_orthologs.tsv\nContains mapID, pathway name, and list of orthologs per pathway (map)\nExtracted from KEGG pathway database\n\n\nko.txt\nContains the IDs and names of orthologs\nExtracted from KEGG orthologs database\n\n\npathway.txt\nContains map IDs (pathways) and their names\nExtracted from KEGG pathway database\n\n\npathway_groups.txt\nMaps IDs grouped by KEGG sub-categories\nExtracted from KEGG pathway database",
    "crumbs": [
      "Getting started",
      "Supported input"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "PANKEGG documentation",
    "section": "",
    "text": "Pankegg\n\nA powerful parser and visualizer for metagenome bin annotation, classification, and quality assessment.\nPankegg is a flexible and user-friendly interactive software suite built with Python, SQL, Jinja, JavaScript, and Flask, designed to visualize and compare bin annotations, taxonomic classifications, and quality metrics (estimated by CheckM2). It enables interactive exploration and comparison of results across bins and samples through a local web server interface.\nPankegg is ideal for anyone working with output files from CheckM2, EggNOG, Sourmash, or GTDB-TK. While it can be integrated into any workflow, it was originally conceived as the final step of the MUFFIN pipeline to provide a comprehensive visualization and analysis platform.",
    "crumbs": [
      "Home",
      "PANKEGG documentation"
    ]
  }
]